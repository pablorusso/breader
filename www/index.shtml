<html>
	<head>
		<title>::Breader:: El lector de noticias inteligente</title>
		<link href="styles/style_menu.css"   rel="stylesheet" type="text/css">
		<link href="styles/style_common.css" rel="stylesheet" type="text/css"/>
		<link href="styles/style_body.css" rel="stylesheet" type="text/css"/>

		<script type="text/javascript">

			function toggleLoading()
			{
				var divLoading = document.getElementById('loading');
				if ( divLoading.style.display == "block" )
					divLoading.style.display = "none";
				else
				{
					var divBody = document.getElementById('chrome');
					if ( divBody != null ) divBody.innerHTML = "";

					divLoading.style.display = "block";
				}
			}

			function reload()
			{
				toggleLoading();
				xmlOpen( "GET", "bin/thin_client.out", "", respHandlerBody );
			}


			function getReadyStateHandler( req, responseHandler )
			{
				return function ()
				{
					if (req.readyState == 4)
					{
						if (req.status == 200)
						{
							if ( req.responseXML == null )
								responseHandler( req.responseText );
							else
								responseHandler( req.responseXML );
						}
						else
						{
							var hellomsg = document.getElementById("hellomsg");
							hellomsg.innerHTML = "ERROR: "+ req.status;
						}
					}
				}
			}

			function getXslProcessor( fileName )
			{
			  	var xsltProcessor = new XSLTProcessor();

  				// Load the xsl file using synchronous (third param is set to false) XMLHttpRequest
  				var myXMLHTTPRequest = new XMLHttpRequest();
  				myXMLHTTPRequest.open("GET", fileName, false);
  				myXMLHTTPRequest.send(null);

  				var xslRef = myXMLHTTPRequest.responseXML;

  				// Finally import the .xsl
  				xsltProcessor.importStylesheet(xslRef);
				return xsltProcessor;
			}

			/**
			* Open a connection to the specified URL, which is
			* intended to respond with an XML message.
			* @param string method The connection method; either "GET" or "POST".
			* @param string url    The URL to connect to.
			* @param string toSend The data to send to the server; must be URL encoded.
			* @param function responseHandler The function handling server response.
			*/
			function xmlOpen(method, url, toSend, responseHandler)
			{
				if (window.XMLHttpRequest)
				{
					// browser has native support for XMLHttpRequest object
					req = new XMLHttpRequest();
				}
				else if (window.ActiveXObject)
				{
					// try XMLHTTP ActiveX (Internet Explorer) version
					req = new ActiveXObject("Microsoft.XMLHTTP");
				}

				if(req)
				{
					var callbackHandler = getReadyStateHandler( req, responseHandler );
					req.onreadystatechange = callbackHandler;
					req.open(method, url, true);
					req.setRequestHeader("content-type","application/x-www-form-urlencoded");
					req.send(toSend);
				}
				else
				{
					alert('Your browser does not seem to support XMLHttpRequest.');
				}
			}

			function respHandlerBody( result )
			{
				var xsltProcessor = getXslProcessor( 'body.xslt' )
				 var toShow = xsltProcessor.transformToFragment( result, document );

				var divBody = document.getElementById('chrome');
				if ( divBody != null )
					divBody.appendChild(toShow)

				toggleLoading();
			}
			function respHandlerMenu( result )
			{
				var divMenu = document.getElementById('nav');
				if ( divMenu != null )
					divMenu.innerHTML = result;
			}

			function loadFrames()
			{
				toggleLoading();
				xmlOpen( "GET", "menu.html", "", respHandlerMenu );
				xmlOpen( "GET", "bin/thin_client.out", "", respHandlerBody );

			}
		</script>
	</head>
	<noscript><style type="text/css"> div {display: none;} #noscript {padding: 3em; font-size: 130%;} </style> <p id="noscript">JavaScript must be enabled in order for you to use Reader. However, it seems JavaScript is either disabled or not supported by your browser. To use Reader, enable JavaScript by changing your browser options, then <a href="/reader/">try again</a>.</p></noscript>

	<body onLoad="loadFrames()">

		<div id="loading">
			Procesando la operacion, aguarde...
		</div>

		<div id="nav"></div>

		<div id="chrome"></div>
	</body>
</html>
